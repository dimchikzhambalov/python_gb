# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

rating = [7, 5, 3, 3, 2]

new_rate = int(input("Введите оценку от 1 до 9: "))

if new_rate <= 0 or new_rate > 9:
    new_rate = input("Введите оценку от 1 до 9: ")

if new_rate in rating:
    rating.reverse()
    n = rating.index(new_rate)
    rating.insert(n, float(new_rate))
    rating.reverse()
elif new_rate > rating[0]:
    rating.insert(0, float(new_rate))
elif new_rate < rating[-1]:
    rating.insert(len(rating), float(new_rate))
else:
    rating.append(new_rate)
    rating.sort(reverse=True)
    # на вебинаре sort не был показан, но он есть в методичке, поэтому я погуглил
    # при этом все равно ощущаю, что в решении нет изящности и краткости, как хотелось бы

print(rating)
